
   1 using Library;
   2 
   3 COMPILER TokenTests $CN
   4 /* Test scanner construction and token definitions - C# version
   5    The generated program will read a file of words, numbers, strings etc
   6    and report on what characters have been scanned to give a token,
   7    and what that token is (as a magic number).  Useful for experimenting
   8    when faced with the problem of defining awkward tokens!
   9 
  10    P.D. Terry, Rhodes University, 2016 */
  11 
  12 /* Some code to be added to the parser class */
  13 
  14   static void Display(Token token) {
  15   // Simply reflect the fields of token to the standard output
  16     IO.Write("Line ");
  17     IO.Write(token.line, 4);
  18     IO.Write(" Column");
  19     IO.Write(token.col, 4);
  20     IO.Write(":  Kind");
  21     IO.Write(token.kind, 3);
  22     IO.WriteLine("  Val |" + token.val.Trim() + "|");
  23   } // Display
  24 
  25 CHARACTERS  /* You may like to introduce others */
  26 
  27   sp         = CHR(32) .
  28   backslash  = CHR(92) .
  29   control    = CHR(0) .. CHR(31) .
  30   letter     = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz" .
  31   digit      = "0123456789" .
  32   nonZero    = "123456789" .
  33   stringCh   = ANY - '"' - control - backslash .
  34   charCh     = ANY - "'" - control - backslash .
  35   printable  = ANY - control .
  36 
  37 TOKENS      /* You may like to introduce others */
  38 
  39   ident      = letter { ( "_" ( letter | digit ) ) | letter | digit } . 
  40   integer    = ( nonZero { digit } | "0" ) | ( nonZero { digit } | "0" ) CONTEXT (".") .
  41   double     = ( nonZero { digit } | "0" ) "." digit { digit } ["E" ["+"|"-"] digit { digit }] .
  42   string     = '"' { stringCh | backslash printable } '"' .
  43   char       = "'" ( charCh   | backslash printable ) "'" .
  44 
  45 IGNORE control
  46 
  47 PRODUCTIONS
  48 
  49    TokenTests
  50    = { (    ANY
  51          |  "."
  52          |  ".."
  53          |  "ANY"
  54        )                     (. Display(token); .)
  55      } EOF                   (. Display(token); .)
  56      .
  57 
  58 END TokenTests.
  59 

0 errors detected
